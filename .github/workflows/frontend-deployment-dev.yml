name: Deploy Front end in S3
on:
  push:
    branches:
      - develop
    paths:
      - web/**
      - .github/workflows/frontend*

jobs:
  deploy_front_end:
    runs-on: ubuntu-latest
    env:
      REACT_APP_BACKEND: http://3.232.219.197:3000
      REACT_APP_STAT_URL: http://3.232.219.197:3100
      REACT_APP_COUNTRY_NAME: "Colombia"
      REACT_APP_COUNTRY_FLAG_URL: "https://carbon-common-eco-test.s3.amazonaws.com/na-flag.png"
      REACT_APP_COUNTRY_CODE: "CO"
      REACT_APP_MAP_TYPE: "Mapbox"
    steps:
      - uses: actions/checkout@v3
      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: carbon-web
          IMAGE_TAG: colombia
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f web/Dockerfile . --build-arg PORT=3030 --build-arg REACT_APP_BACKEND=http://3.232.219.197:3000 --build-arg REACT_APP_STAT_URL=http://3.232.219.197:3100 --build-arg REACT_APP_COUNTRY_NAME="Colombia" --build-arg REACT_APP_COUNTRY_FLAG_URL="https://carbon-common-prod.s3.amazonaws.com/na-flag.png" --build-arg REACT_APP_COUNTRY_CODE="CO" --build-arg REACT_APP_MAP_TYPE="Mapbox" --build-arg REACT_APP_MAPBOXGL_ACCESS_TOKEN=${{ secrets.MAPBOXGL_ACCESS_TOKEN }}
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
