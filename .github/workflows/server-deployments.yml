name: Deploy Services
on:
  push:
    branches:
      - develop
      - main
    paths:
      - backend/**
      - .github/workflows/server*

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1

jobs:
  check_dependency_change:
    runs-on: ubuntu-latest
    # Declare outputs for next jobs
    outputs:
      deps_changed: ${{ steps.check_file_changed.outputs.deps_changed }}
      stage: ${{ steps.branch_check.outputs.stage }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: branch_check
        run: |
          if [[ ${GITHUB_REF} == 'refs/heads/main' ]]; then
            echo "stage=prod" >> $GITHUB_OUTPUT
          else
            echo "stage=dev" >> $GITHUB_OUTPUT
          fi
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: [check_dependency_change]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/develop'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        if: github.ref == 'refs/heads/develop'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push the image to Amazon ECR
        if: github.ref == 'refs/heads/develop'
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: carbon-services
          IMAGE_TAG: colombia
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f backend/services/Dockerfile .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
