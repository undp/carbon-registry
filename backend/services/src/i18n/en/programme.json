{
  "authoriseProgrammeSuccess": "The project has been authorised successfully",
  "authoriseAlreadyAuthorisedProg": "This project has already been auhtorised",
  "rejectProgrammeSuccess": "The project has been rejected successfully",
  "rejectAlreadyRejectedProg": "This project has already been rejected",
  "programmeExistsWithSameExetrnalId": "Project already exist with the given externalId",
  "transferRequestALreadyProcessed": "Project transfer request already processed",
  "programmeNotExist": "Project does not exist",
  "noMitigationActionFound": "Mitigation action does not exist",
  "mitigationActionAlreadyExist": "Mitigation action already exist",
  "programmeNotExistWIthId": "Project does not exist {}",
  "companyIsNotOwnerOfProgramme": "Company {} does not own the project",
  "companyHaveNoEnoughCredits": "Company {} does not have enough credits",
  "alreadyCertified": "This project has already been certified",
  "onlyCertifierCanIssuedProgramme": "Can certify only issued projects",
  "notCertifiedByCertifier": "Certifier does not certified the project",
  "failedToUpdate": "Project failed to update",
  "doesNotOwnByCompany": "Project does not own by the company",
  "noOwnershipPercForCompany": "Not ownership percentage for the company",
  "overallCreditNotFoundforCountryCode": "Overall credit does not found for the country code {}",
  "unExpectedProgOwnerPerc": "Unexpected project owner percentages",
  "notImplementedForMitigationType": "Not implemented for mitigation type {}",
  "transferReqNotExist": "Transfer request does not exist",
  "acceptOrRejCancelledReq": "This transfer request has been cancelled",
  "invalidApproverForTransferReq": "Invalid approver for the transfer request",
  "invalidApproverForRetirementReq": "Invalid approver for the retirement request",
  "noPendReqFound": "This transfer request has been cancelled",
  "transferAlreadyApproved": "This transfer request has already been accepted",
  "receiveCompanySuspended": "Receive company suspended",
  "cerditSendingCompSuspended": "Credit sending company suspended",
  "noPendingTransferReq": "This transfer request has been cancelled",
  "internalErrorStatusUpdating": "Internal error on status updating",
  "transferReqAlreadyProcessed": "This transfer request has already been cancelled",
  "transferReqNotExistinGiv": "Transfer request does not exist in the giv",
  "totalAmount>0": "Total Amount should be greater than 0",
  "companyCreditNeedsToDefineForMultipleComp": "Company credit needs to define for multiple companies",
  "invalidCompCreditForGivenComp": "Invalid company credit for given companies",
  "invalidCompCreditFromGivenComp": "Invalid company credit for given from companies",
  "cantTransferCreditWithinSameComp": "Cannot transfer credit within the same company",
  "programmeNotInCreditIssuedState": "Project is not in credit issued state",
  "cantInitiateTransferForOtherComp": "Cannot initiate transfers for other companies",
  "fromCompInReqIsNotOwnerOfProgramme": "From company mentioned in the request does own the project",
  "companyHaveNoEnoughBalanceForTransfer": "Company {} does not have enough balance for the transfer. Available: {}",
  "proponentPercMustDefinedForEvryProponentTaxId": "Proponent percentage must defined for each proponent tax id",
  "proponentPercAndTaxIdsNotMatched": "Proponent percentage and number of tax ids does not match",
  "proponentPercSum=100": "Proponent percentage sum must be equals to 100",
  "duplicatedProponentTaxIds": "Proponent tax id cannot be duplicated",
  "proponentTaxIdNotInSystem": "Proponent tax id does not exist in the system {}",
  "proponentIsNotAProgrammeDev": "Proponent is not a project developer",
  "noEnoughCreditsToCreateProgramme": "Not enough credits to create the project",
  "noDiffInConfigFromThePrevVersion": "Not difference in the config from the previous version",
  "certifyPendingProgramme": "The project has been certified successfully",
  "certifyRejectedProgramme": "This action is unauthorised",
  "certifyProgrammeAlreadyCertifiedBySameCertifier": "This project has already been certified",
  "unAuthorizedCertification": "This action is unauthorised",
  "certificationRevocation": "The certificate has been revoked successfully",
  "certifierOrGovCanOnlyPerformCertificationRevoke": "Project certification revoke can perform only by certifier or government or related ministry",
  "certifierIdRequiredForGov": "CertifierId required for government user",
  "govOrProgrammeOwnerCanInitiateCreditRetirement": "Credit retirement can be initiated only by the government or project owner",
  "reqNotIncludedInFromCompanyId": "Requester does not included in the from company id",
  "notAllowedToRetireOtherCompCredits": "Does not allow to retire other company credits",
  "programmeDevAllowedInitiateOnlyCrossBorderTransfer": "Project developer allowed to initiate only cross border transfers",
  "retireReqFromCOmpOwnTheProgramme": "Retire request from company does own the project",
  "requiredToRetireFullCreditAmountForGivenRetirementType": "Required to retire the full credit amount for the given retirement type",
  "notInAUthorizedState": "Project is not in authorised state",
  "issuedCreditAmountcantExceedPendingCredit": "Project issued credit amount can not exceed pending credit amount",
  "notFOundAPendingProgrammeForTheId": "Does not found a pending project for the given project id {}",
  "notInPendingState": "This project has already been authorised",
  "issuedCreditCantExceedEstCredit": "Project issued credit amount can not exceed estimated credit amount",
  "transferReqRejectSuccess": "The transfer request has been rejected successfully",
  "transferReqCancelSuccess": "The international transfer retire request has been cancelled successfully",
  "transferCancelSuccess": "The transfer request has been cancelled successfully",
  "certifierCanOnlyCertifiy": "Project certification can perform only by certifier",
  "govOrProgrammeOwnerOnlyCreditRetirement": "Credit retirement can initiate only the government or project owner or related ministry",
  "issuedCreditCannotExceedEstCredit": "Project issue credit amount can not exceed estimated credit amount",
  "organisationDeactivated": "This action is unauthorised due to the deactivation of your organisation. You will now be logged out of the system. Log in again to access the system with view-only permissions.",
  "unAuth": "This action is unauthorised",
  "companyIsNotTheOwnerOfProg": "Company {} is not an owner company of the project",
  "internalErrorCreditFreezing": "Internal error on credit freezing"
}
